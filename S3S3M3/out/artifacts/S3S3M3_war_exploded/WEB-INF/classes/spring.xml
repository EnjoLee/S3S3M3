<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
">

    <!-- 引入属性文件 classpath就是resource下-->
    <context:property-placeholder location="classpath:config.properties"
                                  ignore-unresolvable="true"/>

    <!-- 包自动扫描 不扫描Controller注解-->
    <context:component-scan base-package="cn.hncu">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close"
          p:driverClassName="${driverClassName}"
          p:url="${jdbc_url}"
          p:username="${jdbc_username}"
          p:password="${jdbc_password}"
          p:initialSize="${jdbc_init}"
          p:minIdle="${jdbc_minIdle}"
          p:maxActive="${jdbc_maxActive}"
          p:filters="stat,wall" >
    </bean>

    <!-- 配置事物管理类 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource" >
    </bean>

    <!-- 开启注解式事物扫描 -->
    <tx:annotation-driven transaction-manager="transactionManager" />

    <!-- 产生sqlsessionfactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:spring-mybatis.xml" />
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations">
            <list>
                <value>classpath*:cn/hncu/mapping/*.xml</value>
            </list>
        </property>
    </bean>

    <!-- 自动扫描mapper接口-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
          p:basePackage="cn.hncu.dao"
          p:sqlSessionFactoryBeanName="sqlSessionFactory" >
    </bean>

    <!-- 用于持有ApplicationContext,可以使用SpringContextHolder.getBean('xxxx')的静态方法得到spring bean对象 -->
    <bean class="cn.hncu.utils.SpringContextHolder" lazy-init="false" />

</beans>