#####配置根元素
#调试模式，写成DEBUG  ---设置日志级别-存储DEBUG以及以上级别的记录
log4j.rootLogger=INFO,console,file,error
#生产级项目,写成INFO就可以了
#INFO级别比DEBUG级别高 ---console,file,error都是自己写的-名称自己定


####以下配置输出到控制台的配置####
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.Target=System.out
#log4j.appender.console.layout.ConversionPattern=%d %p [%c] %m%n
log4j.appender.console.layout.ConversionPattern=%d %p [%l]\:%m -%t%n



### 输出到日志文件 ###
log4j.appender.file=org.apache.log4j.RollingFileAppender
#以下是具体的目录
log4j.appender.file.File=info.log
#每个文件的最大大小
log4j.appender.file.MaxFileSize=20MB
#最多可以是多少个文件
log4j.appender.file.MaxBackupIndex=3
## 输出INFO级别以上的日志 --Threshold是个全局的过滤器，它将把低于所设置的INFO的信息过滤不显示出来。
log4j.appender.file.Threshold=INFO
#信息的布局格式-按指定的格式打出
log4j.appender.file.layout=org.apache.log4j.PatternLayout
#具体的布局格式 - %d为时间
#log4j.appender.file.layout.ConversionPattern=%d %p [%c] %m %l %n
log4j.appender.file.layout.ConversionPattern=%d %p [%l]\:%m -%t%n

### 保存异常信息到单独文件 ###
log4j.appender.error = org.apache.log4j.DailyRollingFileAppender
## 异常日志文件名
log4j.appender.error.File = error.log
log4j.appender.error.Append = true
## 只输出ERROR级别以上的日志!!!
log4j.appender.error.Threshold = ERROR
log4j.appender.error.layout = org.apache.log4j.PatternLayout
log4j.appender.error.layout.ConversionPattern = %d %p [%l]\:%m -%t%n



